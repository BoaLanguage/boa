   0  $accept : %entry% $end

   1  prog : block EOF

   2  block : blockl

   3  blockl : stmt
   4         | stmt blockl

   5  fndef : DEF VAR declwrapper ARROW TNAME COLON NEWLINE block

   6  declwrapper : LPAREN declist RPAREN
   7              | LPAREN RPAREN

   8  declist : TNAME VAR
   9          | TNAME VAR COMMA declist

  10  stmt : istmt NEWLINE
  11       | istmt EOF

  12  istmt : LPAREN exp RPAREN
  13        | VAR EQUALS exp
  14        | decl
  15        | fndef
  16        | RETURN exp

  17  decl : TNAME VAR

  18  exp : INT
  19      | VAR
  20      | bexp

  21  bexp : exp PLUS exp

  22  %entry% : '\001' prog

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	.  error

	%entry%  goto 2


state 1
	%entry% : '\001' . prog  (22)

	VAR  shift 3
	TNAME  shift 4
	LPAREN  shift 5
	DEF  shift 6
	RETURN  shift 7
	.  error

	prog  goto 8
	block  goto 9
	blockl  goto 10
	stmt  goto 11
	fndef  goto 12
	istmt  goto 13
	decl  goto 14


state 2
	$accept : %entry% . $end  (0)

	$end  accept


state 3
	istmt : VAR . EQUALS exp  (13)

	EQUALS  shift 15
	.  error


state 4
	decl : TNAME . VAR  (17)

	VAR  shift 16
	.  error


state 5
	istmt : LPAREN . exp RPAREN  (12)

	VAR  shift 17
	INT  shift 18
	.  error

	exp  goto 19
	bexp  goto 20


state 6
	fndef : DEF . VAR declwrapper ARROW TNAME COLON NEWLINE block  (5)

	VAR  shift 21
	.  error


state 7
	istmt : RETURN . exp  (16)

	VAR  shift 17
	INT  shift 18
	.  error

	exp  goto 22
	bexp  goto 20


state 8
	%entry% : '\001' prog .  (22)

	.  reduce 22


state 9
	prog : block . EOF  (1)

	EOF  shift 23
	.  error


state 10
	block : blockl .  (2)

	.  reduce 2


state 11
	blockl : stmt .  (3)
	blockl : stmt . blockl  (4)

	VAR  shift 3
	TNAME  shift 4
	LPAREN  shift 5
	DEF  shift 6
	RETURN  shift 7
	EOF  reduce 3
	NEWLINE  reduce 3

	blockl  goto 24
	stmt  goto 11
	fndef  goto 12
	istmt  goto 13
	decl  goto 14


state 12
	istmt : fndef .  (15)

	.  reduce 15


state 13
	stmt : istmt . NEWLINE  (10)
	stmt : istmt . EOF  (11)

	EOF  shift 25
	NEWLINE  shift 26
	.  error


state 14
	istmt : decl .  (14)

	.  reduce 14


state 15
	istmt : VAR EQUALS . exp  (13)

	VAR  shift 17
	INT  shift 18
	.  error

	exp  goto 27
	bexp  goto 20


state 16
	decl : TNAME VAR .  (17)

	.  reduce 17


state 17
	exp : VAR .  (19)

	.  reduce 19


state 18
	exp : INT .  (18)

	.  reduce 18


state 19
	istmt : LPAREN exp . RPAREN  (12)
	bexp : exp . PLUS exp  (21)

	RPAREN  shift 28
	PLUS  shift 29
	.  error


state 20
	exp : bexp .  (20)

	.  reduce 20


state 21
	fndef : DEF VAR . declwrapper ARROW TNAME COLON NEWLINE block  (5)

	LPAREN  shift 30
	.  error

	declwrapper  goto 31


state 22
	istmt : RETURN exp .  (16)
	bexp : exp . PLUS exp  (21)

	PLUS  shift 29
	EOF  reduce 16
	NEWLINE  reduce 16


state 23
	prog : block EOF .  (1)

	.  reduce 1


state 24
	blockl : stmt blockl .  (4)

	.  reduce 4


state 25
	stmt : istmt EOF .  (11)

	.  reduce 11


state 26
	stmt : istmt NEWLINE .  (10)

	.  reduce 10


state 27
	istmt : VAR EQUALS exp .  (13)
	bexp : exp . PLUS exp  (21)

	PLUS  shift 29
	EOF  reduce 13
	NEWLINE  reduce 13


state 28
	istmt : LPAREN exp RPAREN .  (12)

	.  reduce 12


state 29
	bexp : exp PLUS . exp  (21)

	VAR  shift 17
	INT  shift 18
	.  error

	exp  goto 32
	bexp  goto 20


state 30
	declwrapper : LPAREN . declist RPAREN  (6)
	declwrapper : LPAREN . RPAREN  (7)

	TNAME  shift 33
	RPAREN  shift 34
	.  error

	declist  goto 35


state 31
	fndef : DEF VAR declwrapper . ARROW TNAME COLON NEWLINE block  (5)

	ARROW  shift 36
	.  error


32: shift/reduce conflict (shift 29, reduce 21) on PLUS
state 32
	bexp : exp . PLUS exp  (21)
	bexp : exp PLUS exp .  (21)

	PLUS  shift 29
	RPAREN  reduce 21
	EOF  reduce 21
	NEWLINE  reduce 21


state 33
	declist : TNAME . VAR  (8)
	declist : TNAME . VAR COMMA declist  (9)

	VAR  shift 37
	.  error


state 34
	declwrapper : LPAREN RPAREN .  (7)

	.  reduce 7


state 35
	declwrapper : LPAREN declist . RPAREN  (6)

	RPAREN  shift 38
	.  error


state 36
	fndef : DEF VAR declwrapper ARROW . TNAME COLON NEWLINE block  (5)

	TNAME  shift 39
	.  error


state 37
	declist : TNAME VAR .  (8)
	declist : TNAME VAR . COMMA declist  (9)

	COMMA  shift 40
	RPAREN  reduce 8


state 38
	declwrapper : LPAREN declist RPAREN .  (6)

	.  reduce 6


state 39
	fndef : DEF VAR declwrapper ARROW TNAME . COLON NEWLINE block  (5)

	COLON  shift 41
	.  error


state 40
	declist : TNAME VAR COMMA . declist  (9)

	TNAME  shift 33
	.  error

	declist  goto 42


state 41
	fndef : DEF VAR declwrapper ARROW TNAME COLON . NEWLINE block  (5)

	NEWLINE  shift 43
	.  error


state 42
	declist : TNAME VAR COMMA declist .  (9)

	.  reduce 9


state 43
	fndef : DEF VAR declwrapper ARROW TNAME COLON NEWLINE . block  (5)

	VAR  shift 3
	TNAME  shift 4
	LPAREN  shift 5
	DEF  shift 6
	RETURN  shift 7
	.  error

	block  goto 44
	blockl  goto 10
	stmt  goto 11
	fndef  goto 12
	istmt  goto 13
	decl  goto 14


state 44
	fndef : DEF VAR declwrapper ARROW TNAME COLON NEWLINE block .  (5)

	.  reduce 5


State 32 contains 1 shift/reduce conflict.


43 terminals, 13 nonterminals
23 grammar rules, 45 states
