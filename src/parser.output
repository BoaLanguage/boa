   0  $accept : %entry% $end

   1  prog : stmt EOF

   2  stmt : LPAREN INT RPAREN

   3  %entry% : '\001' prog

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	.  error

	%entry%  goto 2


state 1
	%entry% : '\001' . prog  (3)

	LPAREN  shift 3
	.  error

	prog  goto 4
	stmt  goto 5


state 2
	$accept : %entry% . $end  (0)

	$end  accept


state 3
	stmt : LPAREN . INT RPAREN  (2)

	INT  shift 6
	.  error


state 4
	%entry% : '\001' prog .  (3)

	.  reduce 3


state 5
	prog : stmt . EOF  (1)

	EOF  shift 7
	.  error


state 6
	stmt : LPAREN INT . RPAREN  (2)

	RPAREN  shift 8
	.  error


state 7
	prog : stmt EOF .  (1)

	.  reduce 1


state 8
	stmt : LPAREN INT RPAREN .  (2)

	.  reduce 2


40 terminals, 4 nonterminals
4 grammar rules, 9 states
